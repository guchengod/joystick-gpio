name: Go Build and Release

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: go mod download

      - name: Build for all platforms
        run: make build-all

      - name: Create compressed packages
        run: |
          cd dist
          for dir in */; do
            if [ -d "$dir" ]; then
              platform=$(basename "$dir")
              echo "Creating package for $platform"
              if [[ "$platform" == *"windows"* ]]; then
                cd "$dir" && zip -r "../joystick-gpio-$platform.zip" ./* && cd ..
              else
                cd "$dir" && tar -czf "../joystick-gpio-$platform.tar.gz" ./* && cd ..
              fi
            fi
          done
          # 列出所有生成的压缩包
          ls -la *.tar.gz *.zip

      - name: Create Release and Upload Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref_name }}
        run: |
          # 首先创建 Release
          echo "Creating release for tag: $TAG_NAME"
          RELEASE_JSON=$(curl -s -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/releases" \
            -d "{
              \"tag_name\": \"$TAG_NAME\",
              \"name\": \"Release $TAG_NAME\",
              \"body\": \"Automated release for $TAG_NAME\\n\\nBuilt from commit: ${{ github.sha }}\",
              \"draft\": false,
              \"prerelease\": false
            }")
          
          # 提取 upload_url
          UPLOAD_URL=$(echo "$RELEASE_JSON" | grep '"upload_url"' | cut -d'"' -f4 | sed 's/{.*}//')
          echo "Upload URL: $UPLOAD_URL"
          
          # 上传所有压缩包
          for asset in dist/*.tar.gz dist/*.zip; do
            if [ -f "$asset" ]; then
              echo "Uploading $asset"
              ASSET_NAME=$(basename "$asset")
              curl -s -X POST \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Content-Type: $(file --mime-type -b "$asset")" \
                --data-binary @"$asset" \
                "$UPLOAD_URL?name=$ASSET_NAME"
              echo "Uploaded $ASSET_NAME"
            fi
          done